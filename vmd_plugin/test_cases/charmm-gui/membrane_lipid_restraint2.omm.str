* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) VERSION on Jan, 12. 2015.
* DIHEDRAL RESTRAINT POTENTIALS FOR LIPID BILAYER
*

system "mkdir -p openmm/restraints"
open write card unit 52 name openmm/restraints/dihe.txt

calc NLipid = @nliptop + @nlipbot

set i 1
label DODIH

   ! dihedral restraints for double bond cis conformation
   define test sele none end
   define test sele chem cel1 .and. resi @i .and. segid memb .and. .not. ( resn chl1 .or. resn erg ) show end
   calc maxidih = ?nsel / 2
   if ?nsel .gt. 0 then
 
      set idih = 1
      set atom2 = 1
      label idih 
   
         coor stat sele chem cel1 .and. resi @i .and. segid memb .and. .not. bynu 1:@atom2 show end
         calc atom1 = ?selatom
         coor stat sele chem cel1 .and. .bonded. bynu @atom1 show end
         calc atom2 = ?selatom
         coor stat sele type C* .and. .bonded. bynu @atom1 .and. .not. bynu @atom2 end
         calc atom0 = ?selatom
         coor stat sele type C* .and. .bonded. bynu @atom2 .and. .not. bynu @atom1 end
         calc atom3 = ?selatom

         ! OpenMM uses atom index, which starts from 0
         calc index0 = @atom0 - 1
         calc index1 = @atom1 - 1
         calc index2 = @atom2 - 1
         calc index3 = @atom3 - 1

         write title unit 52
         * @index0 @index1 @index2 @index3 0.0 0.0
         *
     
      incr idih by 1
      if idih .le. @maxidih goto idih

   endif

   ! dihedral restraints for double bond trans conformation
   define test sele none end
   define test sele chem cel3 .and. resi @i .and. segid memb show end
   calc maxidih = ?nsel / 2
   if ?nsel .gt. 0 then

      set idih = 1
      set atom2 = 1
      label transdih

         coor stat sele chem cel3 .and. resi @i .and. segid memb .and. .not. bynu 1:@atom2 show end
         calc atom1 = ?selatom
         coor stat sele chem cel3 .and. .bonded. bynu @atom1 show end
         calc atom2 = ?selatom
         coor stat sele type C* .and. .bonded. bynu @atom1 .and. .not. bynu @atom2 end
         calc atom0 = ?selatom
         coor stat sele type C* .and. .bonded. bynu @atom2 .and. .not. bynu @atom1 end
         calc atom3 = ?selatom

         ! OpenMM uses atom index, which starts from 0
         calc index0 = @atom0 - 1
         calc index1 = @atom1 - 1
         calc index2 = @atom2 - 1
         calc index3 = @atom3 - 1

         write title unit 52
         * @index0 @index1 @index2 @index3 180.0 0.0
         *

      incr idih by 1
      if idih .le. @maxidih goto transdih

   endif

   coor stat sele segid MEMB .and. resid @i end
   set lipid = ?selresn

   !
   ! c22-c32 trans double bond for ergosterol
   !
   if lipid .eq. ERG then
      coor stat sele segid MEMB .and. resid @i .and. type C20 end
      set atom0 = ?selatom
      coor stat sele segid MEMB .and. resid @i .and. type C22 end
      set atom1 = ?selatom
      coor stat sele segid MEMB .and. resid @i .and. type C23 end
      set atom2 = ?selatom
      coor stat sele segid MEMB .and. resid @i .and. type C24 end
      set atom3 = ?selatom

      ! OpenMM uses atom index, which starts from 0
      calc index0 = @atom0 - 1
      calc index1 = @atom1 - 1
      calc index2 = @atom2 - 1
      calc index3 = @atom3 - 1

      write title unit 52
      * @index0 @index1 @index2 @index3 180.0 0.0
      *
   endif

   ! dihedral restraints for L-glyceride
   !   coor stat sele segid MEMB .and. resid @i end 
   !   set lipid = ?selresn
   set iscl = no
   if lipid .eq.  TMCL1 set iscl = ok
   if lipid .eq.  TMCL2 set iscl = ok
   if lipid .eq.  PMCL1 set iscl = ok
   if lipid .eq.  PMCL2 set iscl = ok
   if lipid .eq.  PVCL2 set iscl = ok
   if lipid .eq.  TXCL1 set iscl = ok
   if lipid .eq.  TXCL2 set iscl = ok
   if lipid .eq.  TOCL1 set iscl = ok
   if lipid .eq.  TOCL2 set iscl = ok
   if lipid .eq. LOACL1 set iscl = ok
   if lipid .eq. LOACL2 set iscl = ok
   if lipid .eq. LOCCL1 set iscl = ok
   if lipid .eq. LOCCL2 set iscl = ok
   if lipid .eq.  TLCL1 set iscl = ok
   if lipid .eq.  TLCL2 set iscl = ok
   if lipid .eq. LNCCL1 set iscl = ok
   if lipid .eq. LNCCL2 set iscl = ok
   if lipid .eq. LNACL1 set iscl = ok
   if lipid .eq. LNACL2 set iscl = ok
   if lipid .eq. LNDCL1 set iscl = ok
   if lipid .eq. LNDCL2 set iscl = ok
   if lipid .eq. LNBCL1 set iscl = ok
   if lipid .eq. LNBCL2 set iscl = ok
   if lipid .eq.    PSM set iscl = sph
   if lipid .eq.    SSM set iscl = sph
   if lipid .eq.    ASM set iscl = sph
   if lipid .eq.    BSM set iscl = sph
   if lipid .eq.   23SM set iscl = sph
   if lipid .eq.    LSM set iscl = sph
   if lipid .eq.    OSM set iscl = sph
   if lipid .eq.    NSM set iscl = sph
   if lipid .eq. CER160 set iscl = sph
   if lipid .eq. CER180 set iscl = sph
   if lipid .eq. CER181 set iscl = sph
   if lipid .eq. CER200 set iscl = sph
   if lipid .eq. CER220 set iscl = sph
   if lipid .eq. CER240 set iscl = sph
   if lipid .eq. CER241 set iscl = sph

   if iscl .eq. ok then
      coor stat sele segid memb .and. resi @i .and. type c13 end
      calc atom0 = ?selatom
      coor stat sele segid memb .and. resi @i .and. type c11 end
      calc atom1 = ?selatom
      coor stat sele segid memb .and. resi @i .and. type c12 end
      calc atom2 = ?selatom
      coor stat sele segid memb .and. resi @i .and. type o12 end
      calc atom3 = ?selatom
      coor stat sele segid memb .and. resi @i .and. type c33 end
      calc atom4 = ?selatom
      coor stat sele segid memb .and. resi @i .and. type c31 end
      calc atom5 = ?selatom
      coor stat sele segid memb .and. resi @i .and. type c32 end
      calc atom6 = ?selatom
      coor stat sele segid memb .and. resi @i .and. type o32 end
      calc atom7 = ?selatom

      ! OpenMM uses atom index, which starts from 0
      calc index0 = @atom0 - 1
      calc index1 = @atom1 - 1
      calc index2 = @atom2 - 1
      calc index3 = @atom3 - 1
      calc index4 = @atom4 - 1
      calc index5 = @atom5 - 1
      calc index6 = @atom6 - 1
      calc index7 = @atom7 - 1

      write title unit 52
      * @index0 @index1 @index2 @index3 120.0 2.5
      * @index4 @index5 @index6 @index7 120.0 2.5
      *

      goto skipc2
   endif

   define test sele none end
   define test sele segid memb .and. resi @i .and. ( type c3 .or. type c1 .or. type c2 .or. type o21 ) end
   if ?nsel .eq. 4 then
      coor stat sele segid memb .and. resi @i .and. type c3 end
      calc atom0 = ?selatom
      coor stat sele segid memb .and. resi @i .and. type c1 end
      calc atom1 = ?selatom
      coor stat sele segid memb .and. resi @i .and. type c2 end
      calc atom2 = ?selatom
      coor stat sele segid memb .and. resi @i .and. type o21 end
      calc atom3 = ?selatom

      ! OpenMM uses atom index, which starts from 0
      calc index0 = @atom0 - 1
      calc index1 = @atom1 - 1
      calc index2 = @atom2 - 1
      calc index3 = @atom3 - 1

      write title unit 52
      * @index0 @index1 @index2 @index3 120.0 2.5
      *
 
   endif


   label skipc2

   ! dihedral restraints for inositol ring chair conformation
   ! dihedral restraints for inositol ring upright
   coor stat sele segid MEMB .and. resid @i end 
   set lipid = ?selresn

   set ispi = no
   if lipid .eq.   DMPI set ispi = ok
   if lipid .eq. DMPI13 set ispi = ok
   if lipid .eq. DMPI14 set ispi = ok
   if lipid .eq. DMPI15 set ispi = ok
   if lipid .eq. DMPI24 set ispi = ok
   if lipid .eq. DMPI25 set ispi = ok
   if lipid .eq. DMPI33 set ispi = ok
   if lipid .eq. DMPI34 set ispi = ok
   if lipid .eq. DMPI35 set ispi = ok
   if lipid .eq.   PYPI set ispi = ok
   if lipid .eq.   POPI set ispi = ok
   if lipid .eq. POPI13 set ispi = ok
   if lipid .eq. POPI14 set ispi = ok
   if lipid .eq. POPI15 set ispi = ok
   if lipid .eq. POPI24 set ispi = ok
   if lipid .eq. POPI25 set ispi = ok
   if lipid .eq. POPI33 set ispi = ok
   if lipid .eq. POPI34 set ispi = ok
   if lipid .eq. POPI35 set ispi = ok
   if lipid .eq.   PLPI set ispi = ok
   if lipid .eq. PLPI13 set ispi = ok
   if lipid .eq. PLPI14 set ispi = ok
   if lipid .eq. PLPI15 set ispi = ok
   if lipid .eq. PLPI24 set ispi = ok
   if lipid .eq. PLPI25 set ispi = ok
   if lipid .eq. PLPI33 set ispi = ok
   if lipid .eq. PLPI34 set ispi = ok
   if lipid .eq. PLPI35 set ispi = ok
   if lipid .eq.   PNPI set ispi = ok
   if lipid .eq. PNPI13 set ispi = ok
   if lipid .eq. PNPI14 set ispi = ok
   if lipid .eq. PNPI15 set ispi = ok
   if lipid .eq. PNPI24 set ispi = ok
   if lipid .eq. PNPI25 set ispi = ok
   if lipid .eq. PNPI33 set ispi = ok
   if lipid .eq. PNPI34 set ispi = ok
   if lipid .eq. PNPI35 set ispi = ok
   if lipid .eq.   SAPI set ispi = ok
   if lipid .eq. SAPI13 set ispi = ok
   if lipid .eq. SAPI14 set ispi = ok
   if lipid .eq. SAPI15 set ispi = ok
   if lipid .eq. SAPI24 set ispi = ok
   if lipid .eq. SAPI25 set ispi = ok
   if lipid .eq. SAPI33 set ispi = ok
   if lipid .eq. SAPI34 set ispi = ok
   if lipid .eq. SAPI35 set ispi = ok

   if ispi .eq. ok then
      coor stat sele segid MEMB .and. resi @i .and. type C11 end
      set atom0 = ?selatom
      coor stat sele segid MEMB .and. resi @i .and. type C12 end
      set atom1 = ?selatom
      coor stat sele segid MEMB .and. resi @i .and. type C13 end
      set atom2 = ?selatom
      coor stat sele segid MEMB .and. resi @i .and. type C14 end
      set atom3 = ?selatom
      coor stat sele segid MEMB .and. resi @i .and. type C15 end
      set atom4 = ?selatom
      coor stat sele segid MEMB .and. resi @i .and. type C16 end
      set atom5 = ?selatom
      coor stat sele segid MEMB .and. resi @i .and. type O12 end
      set atom6 = ?selatom
      coor stat sele segid MEMB .and. resi @i .and. type P end
      set atom7 = ?selatom
      coor stat sele segid MEMB .and. resi @i .and. type O11 end
      set atom8 = ?selatom

      ! OpenMM uses atom index, which starts from 0
      calc index0 = @atom0 - 1
      calc index1 = @atom1 - 1
      calc index2 = @atom2 - 1
      calc index3 = @atom3 - 1
      calc index4 = @atom4 - 1
      calc index5 = @atom5 - 1
      calc index6 = @atom6 - 1
      calc index7 = @atom7 - 1
      calc index8 = @atom8 - 1

      write title unit 52
      * @index0 @index1 @index2 @index3 60.0 2.5
      * @index1 @index2 @index3 @index4 -60.0 2.5
      * @index2 @index3 @index4 @index5 60.0 2.5
      * @index3 @index4 @index5 @index0 -60.0 2.5
      * @index4 @index5 @index0 @index1 60.0 2.5
      * @index5 @index0 @index1 @index2 -60.0 2.5
      * @index0 @index6 @index7 @index8 180.0 5.0
      *

   endif 

incr i by 1
if i le @NLipid goto DODIH

prnlev 5

return